/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ConnectionDB;
import java.sql.*;
import javax.swing.JOptionPane;
import model.KhachHang;
/**
 *
 * @author Admins
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    public Register() {
        initComponents();
        this.setLocationRelativeTo(null);
        MaNVLB.setVisible(false);
        MaNVTF.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NameTF = new javax.swing.JTextField();
        AccountTF = new javax.swing.JTextField();
        Pass1TF = new javax.swing.JPasswordField();
        Pass2TF = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        SexCB = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        RegBT = new javax.swing.JButton();
        LoginBT = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        PosCB = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        MaNVTF = new javax.swing.JTextField();
        MaNVLB = new javax.swing.JLabel();
        SDTTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        resetBT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1000, 700));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 255)));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("UVF Vanitas", 1, 36)); // NOI18N
        jLabel1.setText("ĐĂNG KÝ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("Tên tài khoản:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Họ và tên:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Mật khẩu:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel6.setText("Nhập lại mật khẩu:");

        SexCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn", "Nam", "Nữ", "Khác" }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel7.setText("Giới tính:");

        RegBT.setBackground(new java.awt.Color(102, 204, 0));
        RegBT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        RegBT.setText("Đăng ký");
        RegBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegBTActionPerformed(evt);
            }
        });

        LoginBT.setText("Đăng nhập");
        LoginBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginBTActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Bạn đã có tài khoản?");

        PosCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Khách hàng", "Nhân viên" }));
        PosCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PosCBActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel8.setText("Quyền");

        MaNVLB.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        MaNVLB.setText("Mã nhân viên");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel9.setText("Số điện thoại");

        resetBT.setText("Đặt lại");
        resetBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(157, 157, 157))
                            .addComponent(NameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Pass2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(AccountTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                                .addComponent(Pass1TF, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(SDTTF, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(SexCB, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PosCB, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoginBT)
                                .addGap(6, 6, 6)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(MaNVLB, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MaNVTF, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(123, 123, 123)
                                .addComponent(resetBT, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(RegBT)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AccountTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Pass1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Pass2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SDTTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SexCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(PosCB, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaNVLB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaNVTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(RegBT)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginBT)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBT))
                .addGap(197, 197, 197))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(210, 0, 581, 660);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static ConnectionDB c =new ConnectionDB();
    boolean pos=false;
    private void RegBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegBTActionPerformed
        int dk=JOptionPane.showConfirmDialog(this,"Bạn có muốn đăng kí?","Confirm",JOptionPane.YES_NO_OPTION);
        if(dk!=JOptionPane.YES_OPTION) {
            return;
        }
        Connection cn=c.getConnectionDB();
        String sql,str,str1,phone;
        str=String.valueOf(Pass2TF.getPassword());
        str1=String.valueOf(Pass1TF.getPassword());
        Statement stm = null;
        ResultSet rs = null;
        if(pos==false){
            try {
                KhachHang k = new KhachHang(AccountTF.getText(),str,NameTF.getText(),SexCB.getSelectedItem().toString(),SDTTF.getText());
                String sql1="select * from KHACHHANG";
                stm=cn.createStatement();
                rs=stm.executeQuery(sql1);
                boolean kttk=false,ktsdt=false;
                while (rs.next()) {
                    if (rs.getString(1).equals(k.getAcc()))
                        kttk=true;
                    if (rs.getString(7).equals(k.getSdt()))
                        ktsdt=true;
                }
                StringBuilder sb = new StringBuilder();
                if (kttk){
                    sb.append("Tài khoản này đã tồn tại! \n");
                }
                if (ktsdt){
                    sb.append("Số điện thoại này đã được sử dụng! \n");
                }
                if (k.getName().equals("")) {
                    sb.append("Họ tên không được để trống! \n");
                }
                if (k.getAcc().equals("")){
                    sb.append("Tên Tài khoản không được bỏ trống! \n");
                }
                if (str.equals("")){
                    sb.append("Mật khẩu không được để trống! \n");
                }
                if (str1.equals("")){
                    sb.append("Xác nhận mật khẩu không được để trống! \n");
                }
                if (!str.equals(str1)){
                    sb.append("Mật khẩu phải trùng nhau! \n");
                }
                if (k.getSdt().equals("")){
                    sb.append("Số điện thoại không được để trống! \n");
                }
                phone=k.getSdt();
                try{
                    Integer.parseInt(phone);
                    
                }catch (Exception e){
                    sb.append("Số điện thoại chỉ được là số! \n");
                }
                if(SexCB.getSelectedItem().equals("Chọn")) {
                    sb.append("Giới tính không được để trống! \n");
                }
                if (sb.length()>0) {
                    JOptionPane.showMessageDialog(this, sb.toString(), "Invalidation",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                sql="insert into KHACHHANG values (?,?,?,?,?,?,?)";
                PreparedStatement ps=cn.prepareStatement(sql);
                ps.setString(1,k.getAcc());
                ps.setString(2,k.getPass());
                ps.setString(3,k.getName());
                ps.setString(4,k.getSex());
                ps.setInt(5,k.getPoint());
                ps.setString(6,k.getVip());
                ps.setString(7,k.getSdt());
                int n=ps.executeUpdate();
                if(n!=0) {
                JOptionPane.showMessageDialog(this,"Đăng kí thành công!");
                this.dispose();
                new login(k.getAcc(),k.getPass()).setVisible(true);
                }
                else JOptionPane.showMessageDialog(this, "Đăng kí thất bại");           
            }
            catch (Exception e) {
                System.out.print("Ket noi khong thanh cong");
                e.printStackTrace();
            }
        }
        else {
            try {
                StringBuilder sb = new StringBuilder();
                if (AccountTF.getText().equals("")){
                    sb.append("Tên Tài khoản không được bỏ trống! \n");
                }
                str=String.valueOf(Pass2TF.getPassword());
                if (str.equals("")){
                    sb.append("Mật khẩu không được để trống! \n");
                }
                if (NameTF.getText().equals("")) {
                    sb.append("Họ tên không được để trống! \n");
                }
                if (str1.equals(""))
                    sb.append("Xác nhận mật khẩu không được để trống! \n");
                if (!str.equals(str1))
                    sb.append("Mật khẩu phải trùng nhau! \n");
                if (SDTTF.getText().equals("")){
                    sb.append("Số điện thoại không được để trống! \n");
                }
                phone=SDTTF.getText();
                try{
                    Integer.parseInt(phone);
                    
                }catch (Exception e){
                    sb.append("Số điện thoại chỉ được là số! \n");
                }
                if(SexCB.getSelectedItem().equals("Chọn")) {
                    sb.append("Giới tính không được để trống! \n");
                }
                if (MaNVTF.getText().equals("")){
                    sb.append("Vui lòng nhập mã nhân viên!");
                }
                if (sb.length()>0) {
                    JOptionPane.showMessageDialog(this, sb.toString(), "Invalidation",JOptionPane.ERROR_MESSAGE);
                    return;
                }
                String sql1="select * from NHANVIEN";
                stm=cn.createStatement();
                rs=stm.executeQuery(sql1);
                while (rs.next()) {
                    if (MaNVTF.getText().equals(rs.getString(1)) && NameTF.getText().equalsIgnoreCase(rs.getString(2)) && SexCB.getItemAt(SexCB.getSelectedIndex()).equals(rs.getString(5)) && SDTTF.getText().equals(rs.getString(7)))
                    {
                        if(rs.getString(3).equals("none")) {
                            sql="update NHANVIEN set TKNV=?, pass=? where MaNV='"+MaNVTF.getText()+"'";
                            PreparedStatement ps=cn.prepareStatement(sql);
                            ps.setString(1,AccountTF.getText());
                            ps.setString(2,str);
                            int n=ps.executeUpdate();
                            if(n!=0) {
                                JOptionPane.showMessageDialog(this,"Đăng kí thành công!");
                                this.dispose();
                                new login(AccountTF.getText(),str).setVisible(true);
                            }
                            else JOptionPane.showMessageDialog(this, "Đăng kí thất bại!");
                            return;
                        }
                        else {
                            JOptionPane.showMessageDialog(this,"Nhân viên này đã có tài khoản!","Invalidation",JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                }      
                JOptionPane.showMessageDialog(this,"Nhân viên không tồn tại hoặc sai thông tin!","Invalidation",JOptionPane.ERROR_MESSAGE);
            }
            catch (Exception e) {
                //System.out.print("Ket noi khong thanh cong");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_RegBTActionPerformed

    private void LoginBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginBTActionPerformed
        this.dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_LoginBTActionPerformed

    private void PosCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PosCBActionPerformed
        if (PosCB.getSelectedItem().equals("Nhân viên")){
            pos=true;
            MaNVLB.setVisible(true);
            MaNVTF.setVisible(true);
        }
        else {
            pos=false;
            MaNVLB.setVisible(false);
            MaNVTF.setVisible(false);
        }
    }//GEN-LAST:event_PosCBActionPerformed

    private void resetBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTActionPerformed
        AccountTF.setText("");
        NameTF.setText("");
        Pass1TF.setText("");
        Pass2TF.setText("");
        SDTTF.setText("");
        MaNVTF.setText("");
        PosCB.setSelectedItem("Khách hàng");
        SexCB.setSelectedItem("Nam");
    }//GEN-LAST:event_resetBTActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);    
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccountTF;
    private javax.swing.JButton LoginBT;
    private javax.swing.JLabel MaNVLB;
    private javax.swing.JTextField MaNVTF;
    private javax.swing.JTextField NameTF;
    private javax.swing.JPasswordField Pass1TF;
    private javax.swing.JPasswordField Pass2TF;
    private javax.swing.JComboBox<String> PosCB;
    private javax.swing.JButton RegBT;
    private javax.swing.JTextField SDTTF;
    private javax.swing.JComboBox<String> SexCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton resetBT;
    // End of variables declaration//GEN-END:variables
}
